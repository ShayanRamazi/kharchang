# Generated by Django 3.0.5 on 2021-04-24 13:52

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0007_auto_20210420_1525'),
        ('tsetmc', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BestLimitBuyData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField()),
                ('instrumentId', models.CharField(max_length=30)),
                ('time', models.TimeField()),
                ('row', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('amount', models.IntegerField()),
                ('volume', models.IntegerField()),
                ('price', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BestLimitSellData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField()),
                ('instrumentId', models.CharField(max_length=30)),
                ('time', models.TimeField()),
                ('row', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('amount', models.IntegerField()),
                ('volume', models.IntegerField()),
                ('price', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClientTypeData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('instrumentId', models.CharField(max_length=30)),
                ('numberBuyReal', models.IntegerField()),
                ('volumeBuyReal', models.IntegerField()),
                ('valueBuyReal', models.IntegerField()),
                ('priceBuyReal', models.FloatField()),
                ('numberBuyLegal', models.IntegerField()),
                ('volumeBuyLegal', models.IntegerField()),
                ('valueBuyLegal', models.IntegerField()),
                ('priceBuyLegal', models.FloatField()),
                ('numberSellReal', models.IntegerField()),
                ('volumeSellReal', models.IntegerField()),
                ('valueSellReal', models.IntegerField()),
                ('priceSellReal', models.FloatField()),
                ('numberSellRegal', models.IntegerField()),
                ('volumeSellLegal', models.IntegerField()),
                ('valueSellLegal', models.IntegerField()),
                ('priceSellLegal', models.FloatField()),
                ('changeLegalToReal', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstrumentPriceData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField()),
                ('instrumentId', models.CharField(max_length=30)),
                ('time', models.TimeField()),
                ('lastTradePrice', models.IntegerField()),
                ('lastPrice', models.IntegerField()),
                ('firstPrice', models.IntegerField()),
                ('yesterdayPrice', models.IntegerField()),
                ('maxPrice', models.IntegerField()),
                ('minPrice', models.IntegerField()),
                ('numberOfTransactions', models.IntegerField()),
                ('turnover', models.IntegerField()),
                ('valueOfTransactions', models.IntegerField()),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IntraTradeData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField()),
                ('instrumentId', models.CharField(max_length=30)),
                ('time', models.TimeField()),
                ('amount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('canceled', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShareHolderData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField()),
                ('instrumentId', models.CharField(max_length=30)),
                ('isinShareHolder', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=150)),
                ('percentage', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(1.0)])),
                ('amountOfShares', models.BigIntegerField()),
                ('isStart', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StaticTreshholdData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('date', models.DateField()),
                ('instrumentId', models.CharField(max_length=30)),
                ('maxAllowed', models.IntegerField()),
                ('minAllowed', models.IntegerField()),
                ('baseVolume', models.BigIntegerField()),
                ('numberOfShares', models.BigIntegerField()),
                ('yesterdayPrice', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TseTmcCrawlTask',
            fields=[
                ('crawltask_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.CrawlTask')),
                ('date_to_crawl', models.DateField()),
                ('instrumentId', models.CharField(max_length=30)),
            ],
            options={
                'abstract': False,
            },
            bases=('core.crawltask',),
        ),
        migrations.DeleteModel(
            name='Trade',
        ),
    ]
