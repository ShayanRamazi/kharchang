# Generated by Django 3.0.5 on 2021-04-13 15:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CrawlTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('started_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('state', models.CharField(default=None, max_length=2)),
                ('description', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('retried', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('max_retry', models.SmallIntegerField(default=2)),
                ('url', models.URLField(default=None, validators=[django.core.validators.URLValidator])),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestBaseClass',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestCrawlTask',
            fields=[
                ('crawltask_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.CrawlTask')),
                ('name', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('core.crawltask',),
        ),
        migrations.CreateModel(
            name='TestBaseTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('started_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('state', models.CharField(default=None, max_length=2)),
                ('description', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('retried', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('max_retry', models.SmallIntegerField(default=2)),
                ('name', models.CharField(max_length=10)),
                ('created_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestErrorBaseTask',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.testbasetask',),
        ),
        migrations.CreateModel(
            name='TestSuccessBaseCase',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.testbasetask',),
        ),
        migrations.CreateModel(
            name='TestBadValueBaseTask',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.testsuccessbasecase',),
        ),
        migrations.CreateModel(
            name='TestIOErrorBaseTask',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.testsuccessbasecase',),
        ),
        migrations.CreateModel(
            name='TestSuccessCrawlTask',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.testcrawltask',),
        ),
    ]
